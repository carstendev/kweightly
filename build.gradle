plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}

group 'com.kweightly'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.41'

    compile group: "org.http4k", name: "http4k-core", version: "3.162.0"
    compile group: "org.http4k", name: "http4k-server-jetty", version: "3.162.0"
    compile group: "org.http4k", name: "http4k-client-apache", version: "3.162.0"
    compile group: "org.http4k", name: "http4k-cloudnative", version: "3.162.0"
    compile group: "org.http4k", name: "http4k-security-oauth", version: "3.162.0"
    compile group: "org.http4k", name: "http4k-metrics-micrometer", version: "3.162.0"
    compile group: "org.http4k", name: "http4k-resilience4j", version: "3.162.0"

    compile 'io.micrometer:micrometer-registry-prometheus:1.2.0'

    compile group: 'com.typesafe', name: 'config', version: '1.3.4'
    compile 'com.uchuhimo:konf:0.13.3' // config loading

    compile 'org.jetbrains.exposed:exposed:0.15.1' // database access
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'
    compile "com.h2database:h2:1.4.199"
    compile "org.postgresql:postgresql:42.2.2"

    compile group: 'org.flywaydb', name: 'flyway-core', version: '6.0.0-beta2' // db migrations

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j18-impl', version: '2.12.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api-kotlin', version: '1.0.0'

    compile group: 'org.bitbucket.b_c', name: 'jose4j', version: '0.6.5' // jwt handling
}

// tell the jar which class to startup in.
jar {
    manifest {
        attributes 'Main-Class': 'ServerKt'
        attributes 'Multi-Release': true
    }
}

import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer
shadowJar {
    transform(ServiceFileTransformer) {
        path = 'META-INF/services'
        include 'org.eclipse.jetty.http.HttpFieldPreEncoder'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}